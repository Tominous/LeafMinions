import: 
	java.util.UUID
	org.bukkit.util.EulerAngle
	org.bukkit.event.player.PlayerArmorStandManipulateEvent	
	com.wasteofplastic.askyblock.ASkyBlockAPI

options:

	#do not touch this -_-
	plugin-version: 0.0.1
	

function check_yaml(dir: text, value: text, set: text, type: text = "TEXT"):
	yaml value {_value} from "leaf.minions.%{_dir}%" is not set:
		if {_type} is "text" or "material":
			set yaml value {_value} from "leaf.minions.%{_dir}%" to {_set}
		if {_type} is "number":
			set yaml value {_value} from "leaf.minions.%{_dir}%" to {_set} parsed as number
		if {_type} is "boolean":
			set yaml value {_value} from "leaf.minions.%{_dir}%" to {_set} parsed as boolean
	if {_type} is "list":
		yaml list {_value} from "leaf.minions.%{_dir}%" is not set
		loop {_set} split at "||":
			add loop-value to yaml list {_value} from "leaf.minions.%{_dir}%"

function minion_check(uuid: text, loc: location) :: boolean:
	if ASkyBlockAPI.getInstance().getIslandOwnedBy(UUID.fromString({_uuid})).onIsland({_loc}):
		return true
	else:	
		set {_stuff::*} to ASkyBlockAPI.getInstance().getTeamMembers(UUID.fromString({_uuid}))
		size of {_stuff::*} > 1:
			loop {_stuff::*}:		
				if ASkyBlockAPI.getInstance().getIslandOwnedBy(UUID.fromString(uuid of loop-value)).onIsland({_loc}):	
					return true	
			return false	
		else:
			return false			

on join:
	load yaml "plugins/LeafMinions/playerdata/%uuid of player%.yml" as "leaf.minions.userdata.%uuid of player%"
	yaml value "MINIONS.MINER.LOCATION" from "leaf.minions.userdata.%uuid of player%" is set:
		load chunk chunk at yaml value "MINIONS.MINER.LOCATION" from "leaf.minions.userdata.%uuid of player%"
		spawn_minion(player, yaml value "MINIONS.MINER.LOCATION" from "leaf.minions.userdata.%uuid of player%")	

on quit:
	despawn_minion(player)
	unload yaml "leaf.minions.userdata.%uuid of player%"

on load:
	loop currently loaded yaml files:
		loop-value contains "leaf.minions.config"
		unload yaml loop-value-1
	load yaml "plugins/LeafMinions/config.yml" as "leaf.minions.config"
	check_yaml("config", "settings.minions.miner.name", "&b« &e{player}&e's &7Minion &b»")		
	check_yaml("config", "settings.minions.miner.item-name", "&a&l➜ &7MINION &8&l- &9&lMINER")			
	check_yaml("config", "messages.prefix", "&6&lMinions &8&l» &7")
	check_yaml("config", "messages.no-permission", "&cYou don't have permission to do this.")
	check_yaml("config", "messages.link-chest", "&3Right Click on a chest to link it to your minion.")		
	check_yaml("config", "messages.chest-link", "&aThis chest has been linked to your minion.")	
	save yaml "leaf.minions.config"
	send "&8&l| &3&l-------------------------------------------- &8&l|" to console
	send " " to console
	send "&aLoading &ev.{@plugin-version}&a..." to console
	broadcast "&a&lPlugin loaded!"
	send " " to console
	send "&8&l| &3&l-------------------------------------------- &8&l|" to console	

on unload:
	send "&8&l| &3&l-------------------------------------------- &8&l|" to console
	send " " to console
	send "&aDisabling &ev.{@plugin-version}&a..." to console
	send "&ev.{@plugin-version} &adisabled!" to console
	send " " to console
	send "&8&l| &3&l-------------------------------------------- &8&l|" to console
	
	
command minions [<text = help>] [<player>]:
	aliases: minion
	trigger:		
		if arg-1 is "help":
			send "&a&l➜ &7&n/minion give {player_name}&r"
		if arg-1 is "reload" or "give":
			if player have permission "minions.admin":
				if arg-1 is "reload":
					send "%yaml value ""messages.prefix"" from ""leaf.minions.config""%&cReloading Plugin..."
					make console execute command "sk reload %script%"	
				if arg-1 is "give":	
					give skull of "%player%" parsed as offline player named yaml value "settings.minions.miner.item-name" from "leaf.minions.config" to arg-2				
			else:
				send "%yaml value ""messages.prefix"" from ""leaf.minions.config""%%yaml value ""messages.no-permission"" from ""leaf.minions.config""%"
		if arg-1 is "version":
			send "%yaml value ""messages.prefix"" from ""leaf.minions.config""%{@plugin-version}"		
			
			
on PlayerArmorStandManipulateEvent:
	if metadata value "MINION_OWNER" of event.getRightClicked() is set:	
		cancel event	
	if metadata value "MINION_OWNER" of event.getRightClicked() is uuid of event.getPlayer():
		miner_menu(event.getPlayer())

on right click with player head or floor head:
	name of event-item is yaml value "settings.minions.miner.item-name" from "leaf.minions.config"
	minion_check(uuid of player, location of block above target block) is true:
		cancel event
		spawn_minion(player, location of block above target block)
		remove event-item from player
					
on right click on chest:
	if metadata value "MINION_CHEST" of player is set:
		cancel event
		set yaml value "MINIONS.MINER.CHEST" from "leaf.minions.userdata.%uuid of player%" to location of event-block
		send "%yaml value ""messages.prefix"" from ""leaf.minions.config""%%yaml value ""messages.chest-link"" from ""leaf.minions.config""%"
		save yaml "leaf.minions.userdata.%uuid of player%"
		delete metadata value "MINION_CHEST" of player

on damage of armor stand:
	if metadata value "MINION_OWNER" of victim is set:	
		cancel event

function despawn_minion(p: player) :: boolean:	
	set {_loc} to yaml value "MINIONS.MINER.LOCATION" from "leaf.minions.userdata.%uuid of {_p}%"
	loop entities in radius 1 of {_loc}:
		loop-entity is armor stand
		metadata value "MINION_OWNER" of loop-entity is uuid of {_p}
		clear loop-entity
		delete yaml value "MINIONS.MINER.LOCATION" from "leaf.minions.userdata.%uuid of {_p}%"
		save yaml "leaf.minions.userdata.%uuid of {_p}%"
		return true
	return false

function miner_menu(p: player):
	open virtual hopper inventory with size 5 named "&8&l» &3MINION SETTINGS" to {_p}
	wait a tick
	make a gui slot 1 of {_p} with skull of "nobody" parsed as offline player named "&3&l» &7&nClick To Link Chest" to run:
		set metadata value "MINION_CHEST" of {_p} to "SET"
		send "%yaml value ""messages.prefix"" from ""leaf.minions.config""%%yaml value ""messages.link-chest"" from ""leaf.minions.config""%"
		close {_p}'s inventory
	make a gui slot 3 of {_p} with skull of "nobody" parsed as offline player named "&3&l» &7&nClick To Take The Minion." to run:
		if despawn_minion({_p}) is true:
			give skull of "%{_p}%" parsed as offline player named yaml value "settings.minions.miner.item-name" from "leaf.minions.config" to {_p}
		close {_p}'s inventory	

function spawn_minion(p: player, loc: location):
	set {_uuid} to uuid of {_p}
	set yaml value "MINIONS.MINER.LOCATION" from "leaf.minions.userdata.%{_uuid}%" to {_loc}
	save yaml "leaf.minions.userdata.%{_uuid}%"
	spawn an armor stand at {_loc}
	set {_stand} to spawned armor stand	
	set metadata value "MINION_OWNER" of {_stand} to {_uuid}
	{_stand}.setSmall(true)
#	{_stand}.setGravity(false)
	{_stand}.setCustomNameVisible(true)
	set {_name} to yaml value "settings.minions.miner.name" from "leaf.minions.config"
	replace all "{player}" with "%{_p}%" in {_name}
	{_stand}.setCustomName({_name})	
	{_stand}.setBasePlate(false)
	{_stand}.setArms(true)
	set {_stand}'s helmet to skull of "%{_p}%" parsed as offline player	
	set {_stand}'s chestplate to iron chestplate	
	set {_stand}'s leggings to iron leggings	
	set {_stand}'s boots to iron boots	
	set {_stand}'s tool to diamond pickaxe
	set {_pos} to 10.5
	while {_p} is online:
		set {_angle} to new EulerAngle({_pos}, 0 and 0)
		{_stand}.setRightArmPose({_angle})
		add 1 to {_time}
		add 0.1 to {_pos}
		if {_pos} = 12.5:
			set {_pos} to 11
			minion_check({_uuid}, location of block under block in front of {_stand}) is true
			if yaml value "MINIONS.MINER.CHEST" from "leaf.minions.userdata.%{_uuid}%" is set:
				set {_block} to block under block in front of {_stand}
				if block at yaml value "MINIONS.MINER.CHEST" from "leaf.minions.userdata.%{_uuid}%" has enough space for {_block}:
					add {_block} to inventory of block at yaml value "MINIONS.MINER.CHEST" from "leaf.minions.userdata.%{_uuid}%"
					set block under block in front of {_stand} to air			
		wait 2 ticks

			
			
			
			
			
			